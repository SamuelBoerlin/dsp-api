name: CI

on:
  push:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  compile:
    name: Build Everything
    runs-on: ubuntu-latest
    steps:
      - name: checkout source
        uses: actions/checkout@v1
        with:
          fetch-depth: 15
      - name: get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DD
          utcOffset: "+02:00"
      - name: use daily bazel disk cache
        uses: actions/cache@v2
        with:
          path: ~/.bazel_disk_cache
          key: ${{ runner.OS }}-bazel_disk_cache-${{ steps.current-time.outputs.formattedTime }}
      - name: setup java version
        uses: joschi/setup-jdk@v2
        with:
          java-version: '11' # The OpenJDK version to make available on the path
          architecture: 'x64' # defaults to 'x64'
      - name: install requirements
        run: sudo apt-get install ca-certificates-java expect
      - name: run build everything
        run: bazel build //...

# ------------------------------------------
# ------------------------------------------
# Test client-test-data 
  client-test-data-tests:
    name: Test client-test-data 
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - name: checkout source
        uses: actions/checkout@v1
        with:
          fetch-depth: 15
      - name: get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DD
          utcOffset: "+02:00"
      - name: use daily bazel disk cache
        uses: actions/cache@v2
        with:
          path: ~/.bazel_disk_cache
          key: ${{ runner.OS }}-bazel_disk_cache-${{ steps.current-time.outputs.formattedTime }}
      - name: setup java version
        uses: joschi/setup-jdk@v2
        with:
          java-version: '11' # The OpenJDK version to make available on the path
          architecture: 'x64' # defaults to 'x64'
      - name: install requirements
        run: sudo apt-get install ca-certificates-java expect redis-tools unzip
      - name: generate api-client-test-data
        run: make client-test-data

# ------------------------------------------
# ------------------------------------------

  api-unit-tests:
    name: API Unit Tests
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - name: checkout source
        uses: actions/checkout@v1
        with:
          fetch-depth: 15
      - name: get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DD
          utcOffset: "+02:00"
      - name: use daily bazel disk cache
        uses: actions/cache@v2
        with:
          path: ~/.bazel_disk_cache
          key: ${{ runner.OS }}-bazel_disk_cache-${{ steps.current-time.outputs.formattedTime }}
      - name: setup java version
        uses: joschi/setup-jdk@v2
        with:
          java-version: '11' # The OpenJDK version to make available on the path
          architecture: 'x64' # defaults to 'x64'
      - name: install requirements
        run: sudo apt-get install ca-certificates-java expect
      - name: use daily bazel disk cache
        uses: actions/cache@v2
        with:
          path: ~/.bazel_disk_cache
          key: ${{ runner.OS }}-bazel_disk_cache-${{ steps.date.outputs.date }} }}
      - name: run API unit tests
        run: make test-unit

  api-e2e-tests:
    name: API E2E Tests
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - name: checkout source
        uses: actions/checkout@v1
        with:
          fetch-depth: 15
      - name: get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DD
          utcOffset: "+02:00"
      - name: use daily bazel disk cache
        uses: actions/cache@v2
        with:
          path: ~/.bazel_disk_cache
          key: ${{ runner.OS }}-bazel_disk_cache-${{ steps.current-time.outputs.formattedTime }}
      - name: setup java version
        uses: joschi/setup-jdk@v2
        with:
          java-version: '11' # The OpenJDK version to make available on the path
          architecture: 'x64' # defaults to 'x64'
      - name: install requirements
        run: sudo apt-get install ca-certificates-java expect redis-tools unzip
      - name: run API E2E tests
        run: make test-e2e

  api-integration-tests:
    name: API Integration Tests
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - name: checkout source
        uses: actions/checkout@v1
        with:
          fetch-depth: 15
      - name: get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DD
          utcOffset: "+02:00"
      - name: use daily bazel disk cache
        uses: actions/cache@v2
        with:
          path: ~/.bazel_disk_cache
          key: ${{ runner.OS }}-bazel_disk_cache-${{ steps.current-time.outputs.formattedTime }}
      - name: setup java version
        uses: joschi/setup-jdk@v2
        with:
          java-version: '11' # The OpenJDK version to make available on the path
          architecture: 'x64' # defaults to 'x64'
      - name: Install dependencies
        run: |
          sudo apt-get install ca-certificates-java expect
      - name: run API integration tests
        run: |
          make test-docker
          make test-it

  upgrade-integration-tests:
    name: Upgrade Integration Tests
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - name: checkout source
        uses: actions/checkout@v1
        with:
          fetch-depth: 15
      - name: get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DD
          utcOffset: "+02:00"
      - name: use daily bazel disk cache
        uses: actions/cache@v2
        with:
          path: ~/.bazel_disk_cache
          key: ${{ runner.OS }}-bazel_disk_cache-${{ steps.current-time.outputs.formattedTime }}
      - name: setup java version
        uses: joschi/setup-jdk@v2
        with:
          java-version: '11' # The OpenJDK version to make available on the path
          architecture: 'x64' # defaults to 'x64'
      - name: Install dependencies
        run: |
          sudo apt-get install ca-certificates-java expect
      - name: test repository upgrade
        run: make test-repository-upgrade

  docs-build-test:
    name: Build Docs Testrun
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - name: checkout source
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt
          npm install --global typedoc
          sudo apt-get install graphviz
      - name: run docs build
        run: make docs-build

  release-please:
    name: Prepare next release
    runs-on: ubuntu-latest
    # Automate releases with Conventional Commit Messages as Pull Requests are merged into "main" branch
    # Skip for rebuilds of existing versions
    if: github.event_name != 'workflow_dispatch' && github.ref == 'refs/heads/main'
    steps:
      - run: echo "Running release-please"

  # publish only on release or when rebuilding an existing version (in which
  # case +run_id will be appended to the docker image tags)
  publish:
    name: Publish (on release only)
    needs: [
      api-unit-tests,
      api-e2e-tests,
      api-integration-tests,
      client-test-data-tests,
      upgrade-integration-tests,
      docs-build-test
    ]
    runs-on: ubuntu-latest
    if: (github.event_name == 'workflow_dispatch' || github.event_name == 'release') && startsWith(github.ref, 'refs/tags')
    steps:
      - name: checkout source
        uses: actions/checkout@v1
        with:
          fetch-depth: 50
      - name: get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DD
          utcOffset: "+02:00"
      - name: use daily bazel disk cache
        uses: actions/cache@v2
        with:
          path: ~/.bazel_disk_cache
          key: ${{ runner.OS }}-bazel_disk_cache-${{ steps.current-time.outputs.formattedTime }}
      - name: setup java version
        uses: joschi/setup-jdk@v2
        with:
          java-version: '11' # The OpenJDK version to make available on the path
          architecture: 'x64' # defaults to 'x64'
      - name: install requirements
        run: sudo apt-get install ca-certificates-java expect redis-tools unzip
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt
          npm install --global typedoc
          sudo apt-get install graphviz
      - name: generate api-client-test-data
        run: make client-test-data
      - name: add api-client-test-data to release assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GH_TOKEN }}
          file: client-test-data.zip
          tag: ${{ github.ref }}
          overwrite: true
      - name: build and publish all images to Dockerhub
        run: |
          echo "Docker login"
          make docker-publish
